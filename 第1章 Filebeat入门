1.开始FileBeat
  1.1 安装filebeat
      运行filebeat之前，你需要安装和配置Elastic栈。查看beats和Elastic栈入门。下载并安装filebeat，根据您的系统使用命令行安装。
      Rpm: curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.4.3-x86_64.rpm
      其他各种操作系统的安装，此处省略，请查看源文档。
  1.2 配置filebeat
      配置filebeat,你需要编辑配置文件。
      对于rmp和deb的系统，可在/etc/filebeat/filebeat.yml发现配置文件。
      在Docker下，它位于/usr/share/filebeat目录下。
      Mac和win操作系统，查看刚刚提取的归档文件。
      还有一个完整的示例配置文件称为filebeat.full.yml显示所有非过时的选项。
      有关配置文件的结构，请参考beats平台的配置文件格式章节。
      下面是filebeat.yml文件中的部分filebeat样例，对于大多数的配置选项,filebeat使用预定义的默认值。
			
      filebeat.prospectors:
      - input_type: log
        paths:
          - /var/log/*.log	
          #- c:\programdata\elasticsearch\logs\*
			
      配置filebeat:
      1.定义你的日志文件路径
        最基本的filebeat配置，你可以用一个单一的路径定义一个单独的prospector。例如:
        filebeat.prospectors:
        - input_type: log
        paths:
          - /var/log/*.log
          
        在这个例子中,prospector收获/var/log/*.log下的所有文件，这就意味着filebeat将收获/var/log/目录下的所有已.log结尾的文件。
        Golang Glob支持的所有正则，在这里也支持。
        
        为了从预定义的子目录中获取所有文件，可以使用下面的正则：
        /var/log/*/*.log 这个获取/var/log/目录下的所有子目录的.log文件。它不从/var/log/目录本身获取.log文件。
        目前在目录的所有子目录中递归获取所有文件是不可能的。
        
      2.如果你要发送输出到Elasticsearch,设置filebeat可以发现安装的elasticsearch的IP地址和端口。
        output.elasticsearch:
          hosts: ["192.168.1.42:9200"]
        如果你要发送输出到Logstash，查看第三节 配置filebeat使用logstash。
        
      在启动filebeat之前，你应该看看配置文件中的配置选项，如/etc/filebeat/filebeat.yml。有关这些选项的更多信息，请参见配置选项（参考）
  
  1.3 配置filebeat使用logstash
      先决条件：使用LogStash作为输出，你还必须设置Logstash从Beats接收事件。
      如果你想对filebeat收集到的数据使用logstash进行额外的处理，你需要配置filebeat使用LogStash。
      要做到这一点，需要编辑配置文件，通过注释禁用Elasticsearch output，取消logstash部分的注释启用logstash output。
      #----------------------------- Logstash output --------------------------------
      output.logstash:
  	hosts: ["127.0.0.1:5044"]
      hosts选项指定Logstash的主机和端口，logstash配置监听进来的beats连接。
      这种配置，你必须手动加载索引模板到Elasticsearch，因为自动加载模板只适用于Elasticsearch输出选项。
      
      注意：测试配置文件，先切换到filebeat的安装目录，RPM安装的使用./filebeat.sh -configtest -e.
  
  1.4 从Elasticsearch中加载索引模板
      在Elasticsearch中，索引模板用于定义设置和映射，确定哪些字段应该进行分析。
      Filebeat推荐的索引模板在Filebeat的packages中被安装。如果你接收从filebeat.yml配置文件中加载模板的默认配置，Filebeat连接Elasticsearch
      成功之后自动加载模板，如果模板已经存在，模板将不会被覆盖除非你配置filebeat这样做。
      
      如果你想禁用模板的自动加载，或者你想加载自己的模板，你可以在filebeat配置文件中改变模板加载的设置。如果你选择禁用自动加载模板，你需要手动
      加载模板，更多信息查看：配置模板加载-仅支持Elasticsearch output  手动加载模板-仅针对logstash output.
      
      配置模板加载：
      默认情况下，如果启动的是Elasticsearch output的话，filebeat自动加载推荐的模板文件filebeat.template.json。你可以配置filebeat通过调整
      filebeat.yml文件中的template.name和template.path选项来加载不同的模板：
      output.elasticsearch:
  	hosts: ["localhost:9200"]
  	template.name: "filebeat"
  	template.path: "filebeat.template.json"
  	template.overwrite: false
      默认情况下，如果template在索引中已经存在，它不会被覆盖。为了覆盖一个已存在的模板，在配置文件中设置template.overwrite: true。
      禁用模板自动加载，在Elasticsearch output部分下注释掉模板部分。
      
      手动加载模板：
      如果你禁用了模板自动加载，你需要运行下面的命令来加载模板：
      curl -H 'Content-Type: application/json' -XPUT 'http://localhost:9200/_template/filebeat' -d@/etc/filebeat/filebeat.template.json
      这里的localhost:9200是监听中Elasticsearch的IP和端口。
      
      注意：如果你已经使用filebeat来索引数据到Elasticsearch，索引可能包含老的文档。你加载索引模板后，你可以通过filebeat-*删除老的文档，使Kibana
      查看到最新的文档。使用这个命令：curl -XDELETE 'http://localhost:9200/filebeat-*'
      
  1.5 启动filebeat
      通过你的平台发送相应的命令启动filebeat。
      rpm: sudo /etc/init.d/filebeat start
      filebeat现在已经准备发送日志文件到你定义的output
      
  1.6 加载Kibana索引模式
      我们没有提供预定义的面板展示filebeat的数据。然而为了你更容易的在Kibana中查看filebeat数据，我们创建了Kibana索引模式：filebeat-*。你可以使用
      提供的脚本来加载这张模式，./scripts/import_dashboards -only-index
      
      关于更多运行脚本的信息，查看此章节 Importing Existing Beat Dashboards 
      当你创建了索引模式后，你可以选择filebeat-*索引模式在Kibana中查看filebeat数据。
  
  1.7 常见日志格式的快速启动
      
  1.8 命令行选项
      下面的命令行是Filebeat特有的：
      -once ：当-once标记被使用，filebeat启动所有配置的harvesters和prospectors并运行每个prospector直到harvesters都关闭了。如果你设置了-once标
              记，你也应该设置close_eof确保当到达文件地步harvester可以关闭。默认情况下close_inactive到达后harvesters关闭。
       
      下面的命令行，filebeat也支持，为了使用这些选项，你需要在前台启动filebeat.
      启动filebeat,你必须使用-c config/path选项来指定配置文件的路径。
      
      ./filebeat -h命令可以查看所有的其他命令行
      
      -E <setting>=<value>
      覆盖一个指定配置的设置：sudo ./filebeat -c filebeat.yml -E name=mybeat 此设置应用于当前正在运行的filebeat，Filebeat配置文件没有改变。
      
      -N 禁用发布的事件到定义的output,此选项仅用于测试。
      
      -c <file> 传递配置文件的地址给beat
      
      -configtest 测试配置文件，然后退出。此选项可用于故障诊断。
      
      -cpuprofile <output file> 将CPU配置数据写入指定的文件。此选项可用于故障诊断。
      
      -d <selectors> 启用指定选择器的调试。对于选择器，您可以指定一个逗号分隔的组件列表或者您可以使用-d "*"启用所有组件的调试。例如，-d "publish"
      		     显示所有“publish”相关消息.
		     
      -e 输出日志到stderr和禁用系统日志/文件的输出

      -httpprof [<host>]:<port> 启动HTTP服务进行概要分析。此选项可用于故障排除和分析。
      
      -memprofile <output file> 将内存配置数据写入指定的输出文件，此选项可用于故障诊断。
      
      -path.config 设置配置文件的默认位置
      
      -path.data 设置数据文件的默认位置
      
      -path.home 设置其他各种文件的默认位置
      
      -path.logs 设置日志文件的默认位置
      
      -v 启动详细输出显示INFO级别的消息
